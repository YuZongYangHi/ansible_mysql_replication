---
- name: Create repo backup directory
  file:
    path: /opt/repo_bak
    state: directory 

- name: Move repo to backuo directory 
  shell: "mv /etc/yum.repos.d/* /opt/repo_bak" 
  ignore_errors: true 

- name: Download percona repo 
  unarchive:
    src: "{{ db_repo_url }}"
    dest: /etc/yum.repos.d/
    copy: no
  when: private_single == "no"

- name: Purge yum cache 
  shell: "yum clean all && yum makecache"

- name: Init db directory 
  file:
    path: "{{ db_workdir }}/mysql/{{ item }}"
    state: directory
  with_items:
    - logs
    - data 
    - tmp 

- name: Install db relation package 
  yum:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    disable_gpg_check: yes
  with_items:
    - { name: 'sshpass', state: 'latest'}  
    - { name: 'mariadb*', state: 'absent' } 
    - { name: 'Percona-Server-server-57', state: 'latest' }
    - { name: 'python-pip', state: 'latest' }
    - { name: 'python-devel', state: 'latest' }
    - { name: 'Percona-Server-devel-57', state: 'latest' }
    - { name: 'gcc', state: 'latest' }
    - { name: 'gcc-c++', state: 'latest' }
    - { name: 'python2-pymssql.x86_64', state: 'latest' }
    - { name: 'openssl', state: 'latest' }
    - { name: 'openssl-libs', state: 'latest' }
    - { name: 'openssl-devel', state: 'latest' }

- name: Copy db configure file 
  template:
    src: mysqld.cnf.j2
    dest: "/etc/percona-server.conf.d/mysqld.cnf"

- name: Change db file mode 
  file:
    dest: "{{ db_workdir }}/mysql/"
    owner: mysql 
    group: mysql
    recurse: yes 

- name: Config db configure file 
  shell: 'test -f /etc/my.cnf && mv -f /etc/my.cnf /etc/my.cnf.bak && ln -s /etc/percona-server.conf.d/mysqld.cnf /etc/my.cnf'

- name: Start mysql
  systemd:
    name: mysqld
    state: started
    daemon_reload: yes
    enabled: yes

- name: Get db default password 
  shell: grep "temporary password" '{{ db_workdir }}'/mysql/logs/mysql.log | awk '{print $NF}'
  register: default_password 

#- name: Install python required package 
#  pip:
#    name: "{{ item }}"
#    state: present 
#  with_items:
#    - mysql-python
#    - pymysql

- name: Reset db password
  vars:
    old_passwd: '"{{ item }}"'
    new_passwd: '"{{ db_pass }}"'
  shell: "mysql -uroot -p{{ old_passwd }} -e 'set password = password({{ new_passwd }});' --connect-expired-password"
  with_items:
    - "{{ default_password.stdout }}"

- name: Purge privileges
  shell: 'mysql -uroot -p"{{ db_pass }}" -e "flush privileges;"'
